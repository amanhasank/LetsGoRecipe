{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","styled","div","Appname","Searchbar","SearcInput","input","Appicon","img","Seachicon","ReceipeListcontainer","Receipecontainer","ReceipeComponent","props","React","useState","show","setShow","recipeobj","Dialog","open","DialogTitle","id","DialogContent","ingredients","map","ingredientsobj","text","weight","DialogActions","Ingredientname","onClick","window","url","Seemore","Coverimage","src","image","Receipename","label","Placeholder","span","require","App","timeoutID","updateTimeoutId","receipeList","updatereceipelist","Fetchreceipe","Searchstring","a","Axios","get","response","console","log","data","hits","Container","maxWidth","placeholder","onChange","event","clearTimeout","timeout","setTimeout","target","value","length","recipe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAkBMA,EAASC,IAAOC,IAAV,oQAaNC,EAAUF,IAAOC,IAAV,sEAIPE,EAAYH,IAAOC,IAAV,yJAQTG,EAAaJ,IAAOK,MAAV,iIAQVC,EAAUN,IAAOO,IAAV,sEAIPC,EAAYR,IAAOO,IAAV,sEAcTE,GATkBT,IAAOC,IAAV,wJASQD,IAAOC,IAAV,yJAUpBS,EAAmBV,IAAOC,IAAV,oIAQhBU,EAAmB,SAACC,GACxB,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACQC,EAAaL,EAAbK,UACT,OACE,qCACA,eAACC,EAAA,EAAD,CAAQC,KAAOJ,EAAf,UACA,cAACK,EAAA,EAAD,CAAaC,GAAG,qBAAhB,yBACA,cAACC,EAAA,EAAD,UACA,kCACE,kCACE,6CACA,2CAEF,gCACGL,EAAUM,YAAYC,KAAI,SAACC,GAAD,OACvB,+BACA,6BAAKA,EAAeC,OACpB,6BAAKD,EAAeE,sBAO5B,eAACC,EAAA,EAAD,WACO,cAACC,EAAD,CAAgBC,QAAS,kBAAIC,OAAOZ,KAAKF,EAAUe,MAAnD,iCACA,cAACC,EAAD,CAASH,QAAS,kBAAKd,EAAQ,KAA/B,yBAGP,eAACN,EAAD,WACE,cAACwB,EAAD,CAAYC,IAAOlB,EAAUmB,QAC7B,cAACC,EAAD,UAAcpB,EAAUqB,QACxB,cAACT,EAAD,CAAgBC,QAAS,kBAAId,GAAQ,IAArC,yBAGA,cAACiB,EAAD,CAASH,QAAS,kBAAIC,OAAOZ,KAAKF,EAAUe,MAA5C,oCAMCE,EAAalC,IAAOO,IAAV,+DAKVgC,EAAcvC,IAAOO,IAAV,4FAOX8B,EAAcrC,IAAOwC,KAAV,kGAOXX,EAAiB7B,IAAOwC,KAAV,yLAYdP,EAAUjC,IAAOwC,KAAV,oMAWCC,EAAQ,IA0CPC,MAvCf,WACE,MAAqC5B,qBAArC,mBAAO6B,EAAP,KAAkBC,EAAlB,KACA,EAAyC9B,mBAAS,IAAlD,mBAAO+B,EAAP,KAAoBC,EAApB,KAEIC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACEC,IAAMC,IAAN,0CAA6CH,EAA7C,mBAPR,WAOQ,oBANR,qCAKM,OACdI,EADc,OAGpBC,QAAQC,IAAIF,GACZN,EAAkBM,EAASG,KAAKC,MAJZ,2CAAH,sDAYhB,OACE,eAACC,EAAA,EAAD,CAAWC,SAAW,KAAtB,UACE,eAAC3D,EAAD,WACE,eAACG,EAAD,WACA,cAACI,EAAD,CAAS6B,IAAK,gBADd,sBAGA,eAAChC,EAAD,WACE,cAACK,EAAD,CAAW2B,IAAK,mBAEhB,cAAC/B,EAAD,CAAYuD,YAAY,gBAAgBC,SAd3B,SAACC,GACpBC,aAAanB,GACf,IAAMoB,EAASC,YAAW,kBAAOjB,EAAac,EAAMI,OAAOC,SAAQ,KACnEtB,EAAgBmB,YAcZ,cAACtD,EAAD,UACGoC,EAAYsB,OACbtB,EAAYrB,KAAI,SAACP,GAAD,OACd,cAAC,EAAD,CAAkBA,UAAYA,EAAUmD,YACtC,cAAC7B,EAAD,CAAaJ,IAAI,qBCjMdkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c862b23e.chunk.js","sourcesContent":["import { Container } from '@material-ui/core';\nimport styled from \"styled-components\";\nimport { useState } from 'react';\nimport Axios from \"axios\";\nimport React from 'react';\nimport { DialogContent } from '@material-ui/core';\nimport { DialogTitle } from '@material-ui/core';\nimport { DialogActions } from '@material-ui/core';\n\n\nimport Dialog from '@material-ui/core/Dialog';\n\n// const Container = styled.div `\n//   display: flex;\n//   flex-directon: column;\n//   maxWidth: \"lg\";\n// `;\n\nconst Header = styled.div` \n color: white;\n background-color: #4ab30c;\n display: flex;\n flex-direction: row;\n align-items: center;\n padding : 10px;\n font-size: 22px;\n font-weight: bold;\n justify-content: space-between;\n box-shadow: 0 3px 6px 0 #555\n`;\n\nconst Appname = styled.div`\n  display: flex;\n  align-items: center;\n`; \nconst Searchbar = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: white;\n  padding: 5px;\n  border-radius: 9px;\n  width: 50%;\n`;\nconst SearcInput = styled.input`\n  border: none;\n  outline: none;\n  margin-left: 15px;\n  font-size: 16px;\n  font-weight: bold;\n\n`;\nconst Appicon = styled.img`\nwidth: 36px;\nheight: 36px;\nmargin: 15px;`;\nconst Seachicon = styled.img`\nwidth: 30px;\nheight: 30px;\nmargin: 15px;`;\n\nconst SearchComponent = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color:white;\n  padding:10px;\n  border-radius: 6px;\n  width: 50%;\n`;\n\nconst ReceipeListcontainer = styled.div `\n display: flex;\n flex-direction: row;\n flex-wrap: wrap;\n padding: 30px;\n justify-content: space-evenly;\n gap:20px;\n \n`;\n\nconst Receipecontainer = styled.div `\ndisplay: flex;\nflex-direction: column;\npadding: 10px;\nwidth: 300px;\nbox-shadow: 0 3px 10px 0 #aaa;\n`;\n\nconst ReceipeComponent = (props) => {\n  const [show, setShow] = React.useState(false);\n  const { recipeobj} = props;\n return(\n   <>\n   <Dialog open ={show}>\n   <DialogTitle id=\"alert-dialog-title\">Ingredients</DialogTitle>\n   <DialogContent>\n   <table>\n     <thead>\n       <th>Ingredients</th>\n       <th>Weight</th>\n     </thead>\n     <tbody>\n       {recipeobj.ingredients.map((ingredientsobj)=>(\n           <tr>\n           <td>{ingredientsobj.text}</td>\n           <td>{ingredientsobj.weight}</td>\n         </tr>\n       ))}\n    \n     </tbody>\n   </table>\n   </DialogContent>\n   <DialogActions>\n          <Ingredientname onClick={()=>window.open(recipeobj.url)}>See Complete recipe</Ingredientname>\n          <Seemore onClick={()=> setShow(\"\")}>Close</Seemore>\n        </DialogActions>\n   </Dialog>\n   <Receipecontainer>\n     <Coverimage src = {recipeobj.image}/>\n     <Receipename>{recipeobj.label}</Receipename>\n     <Ingredientname onClick={()=>setShow(true)}>\n       Ingredients\n     </Ingredientname>\n     <Seemore onClick={()=>window.open(recipeobj.url)}>See Full Recipe</Seemore>\n   </Receipecontainer>\n   </>\n );\n};\n\nconst Coverimage = styled.img `\nheight: 200px;\nobject-fit:cover;\n`;\n\nconst Placeholder = styled.img `\nheight: 120px;\nwidth: 120px;\nopacity: 50%;\nmargin: 200px;\n\n`;\nconst Receipename = styled.span `\nfont-size: 18px;\nfont-weight: bold;\ncolor: black;\nmargin: 10px 0;\n`;\n\nconst Ingredientname = styled.span `\nfont-size: 18px;\nborder: solid 1px green;\ncolor: black;\ncursor: pointer;\npadding: 10px 15px;\nborder-radius: 4px;\ncolor: green;\ntext-align: center;\n\n`;\n\nconst Seemore = styled.span `\nfont-size: 18px;\nborder: solid 1px red;\ncolor: black;\nmargin: 10px 0;\ncursor: pointer;\npadding: 10px 15px;\nborder-radius: 4px;\ncolor: red;\ntext-align: center;\n`;\nconst axios = require('axios');\nconst appida = \"3324cd56\";\nconst APP_KEY= \"b052d767b41b6a6dd18f75398b73705c\";\nfunction App() {\n  const [timeoutID, updateTimeoutId] = useState();\n  const [receipeList, updatereceipelist] = useState([]);\n\nconst Fetchreceipe = async (Searchstring)=>{\n const response= await Axios.get(`https://api.edamam.com/search?q=${Searchstring}&app_id=${appida}&app_key=${APP_KEY}`\n );\n console.log(response);\n updatereceipelist(response.data.hits);\n};\n\n  const ontextChange = (event) => {\n    clearTimeout(timeoutID);\n  const timeout= setTimeout(() =>  Fetchreceipe(event.target.value), 500);\n  updateTimeoutId(timeout);\n  };\n  return (\n    <Container maxWidth = \"lg\">\n      <Header>\n        <Appname> \n        <Appicon src =\"/burger.png\" />\n        Let's Go Receipe</Appname>\n        <Searchbar>\n          <Seachicon src =\"/searching.png\" />\n         \n          <SearcInput placeholder=\"Search Recipe\" onChange={ontextChange} />\n        </Searchbar>\n      </Header>\n      <ReceipeListcontainer>\n        {receipeList.length ?\n        receipeList.map((recipeobj) => (\n          <ReceipeComponent recipeobj ={recipeobj.recipe} />\n        )): <Placeholder src=\"burger.png\"/>}\n      </ReceipeListcontainer>\n      \n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}